{"version":3,"sources":["mainStore.js","todos/NewTodoForm.js","todos/TodoListItem.js","todos/TodoList.js","todos/CompleteTodoListItem.js","todos/TodoListComplete.js","NavBar.js","App.js","index.js"],"names":["initialState","dateToDo","title","activeToDOList","fetchToDoLists","dispatch","fetch","then","resp","json","type","payload","mainFunction","prevState","action","console","log","id","map","todoList","filter","NewTodoForm","state","user_id","status","handleChange","event","setState","target","name","value","handleAddNewTask","preventDefault","data","method","headers","body","JSON","stringify","errors","alert","props","createNewTodo","className","onSubmit","this","placeholder","onChange","Component","connect","TodoListItem","handleDelete","deleteTodo","markAsCompleted","completedTask","targetItem","onClick","TodoList","fetchTodos","todo","CompleteTodoListItem","TodoListComplete","NavBar","to","App","fetchAllTodo","fixed","logout","path","component","connectTodolist","store","createStore","mainStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.024d3c70.chunk.js","sourcesContent":["\nconst initialState = {\n    dateToDo: '',\n    title: '',\n    activeToDOList: []\n}\nexport const fetchToDoLists = () => dispatch => {\n    fetch('https://sekoudossocalendar.herokuapp.com/tasks')\n    .then(resp => resp.json())\n    .then(activeToDOList => {\n        dispatch({type: 'FETCH_TO_DO_LISTS', payload: { activeToDOList }})\n    })\n} \nfunction mainFunction (prevState=initialState, action)  {\n\n    switch (action.type) {\n        case 'FETCH_TO_DO_LISTS':\n            return {...prevState, activeToDOList: action.payload.activeToDOList}\n        \n        case 'CREATE_TODO': \n            console.log('*****  payload create new todo  *****', action.payload)\n            return {...prevState, activeToDOList: [...prevState.activeToDOList, action.payload]};\n    \n        case 'COMPLETE_TODO': \n            console.log('***** id  payload completed todo  *****', action.payload.id)\n            return {...prevState, \n                activeToDOList: prevState.activeToDOList.map(todoList=>{\n                    if (todoList.id===action.payload.id){\n                        return action.payload\n                    }else { return todoList }\n                })};\n        \n        case 'REMOVE_TODO': \n            console.log('***** id payload delete todo  *****', action.payload.id)\n            return {...prevState, activeToDOList: [...prevState.activeToDOList.filter(todoList => todoList.id !== action.payload.id)]};\n        default:\n            return prevState;\n    }\n}\n\nexport default mainFunction\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// import { createTodo } from '../mainStore'\n// import { createTodo } from './actions';\nimport './NewTodoForm.css';\n\nclass NewTodoForm extends Component {\n    state = {\n        user_id : 1,\n        title: '',\n        status: false,\n        dateToDo: '',\n    };\n  \n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value })\n    };\n\n    handleAddNewTask = (event) => {\n        \n            event.preventDefault()\n        let data = {\n            user_id : 1,\n            title: this.state.title,\n            status: this.state.status,\n            dateToDo: this.state.dateToDo,\n        } \n        console.log('** new task', data)\n        fetch(\"https://sekoudossocalendar.herokuapp.com/tasks\", {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\",\n                      \"Accept\": \"application/json\"},    \n            body: JSON.stringify(data)\n        })\n        .then(resp=>resp.json())\n        .then(data => {\n            if(data.errors){\n                alert(data.errors)} \n            else {\n                alert('Successfully added')}\n                this.props.createNewTodo(data)\n        }) \n\n    }\n\n    render(){\n        return (\n            <div >\n                <form className=\"new-todo-form\" onSubmit={this.handleAddNewTask} >\n                    <input\n                        className=\"new-todo-input\"\n                        type=\"text\"\n                        name='title'\n                        placeholder=\"Type your new todo here\"\n                        value={this.state.title}\n                        onChange={this.handleChange} />\n                    <input\n                        className=\"new-todo-date-input\"\n                        type=\"date\"\n                        name='dateToDo'\n                        value={this.state.dateToDo}\n                        onChange={this.handleChange}/>\n                    <button className=\"new-todo-button\" type='Submit' value=\"Submit\" >\n                        Create Todo\n                    </button>\n                    \n                </form>\n            </div>\n        );\n    }\n};\n\nconst mdp = dispatch => ({\n    // createNewTodo: (data) => dispatch(createTodo(data)),\n    createNewTodo: (data) => dispatch({type: \"CREATE_TODO\", payload:(data)}),\n    // deleteTodo: (data) => dispatch({type: \"REMOVE_TODO\", payload:(data)}),\n\n});\n\nexport default connect(null, mdp)(NewTodoForm);\n\n","import React, {Component} from 'react';\nimport './TodoListItem.css';\nimport { connect } from 'react-redux';\n\nclass TodoListItem extends Component {\n    handleDelete = () => {\n        // console.log('************this.props.id **********', this.props.id)\n        let id  = this.props.id;              \n        fetch(`https://sekoudossocalendar.herokuapp.com/tasks/${id}`, {\n            method: \"DELETE\"\n        })\n        .then(resp => resp.json())\n        .then(data => { \n            console.log('delete data id', data.id)\n            this.props.deleteTodo(data)})\n    }\n\n    markAsCompleted = (event) => {\n        event.preventDefault()\n        let id  = this.props.id;              \n        fetch(`https://sekoudossocalendar.herokuapp.com/tasks/${id}`, {\n            method: 'PATCH',\n            headers: {\"Content-Type\": \"application/json\",\n                      \"Accept\": \"application/json\"},    \n            body: JSON.stringify({status: true}\n            )\n        })\n        .then(resp=>resp.json())\n        .then(data =>  {this.props.completedTask(data)})\n        this.setState({ targetItem: {} }) \n    } \n    \n    handleChange = (event) => {\n        this.setState({\n              [event.target.name]: event.target.value\n        })\n      }\n    render(){\n        // console.log('************this.props.title**********', this.props.title)\n        // console.log('************this.props.date**********', this.props.dateToDo)\n        // console.log('************this.props.id **********', this.props.id)\n        return(\n            <div className=\"todo-item-container\">\n                <h3>{this.props.title}</h3>\n                <h3>{this.props.dateToDo}</h3>\n                <div className=\"buttons-container\">\n                    <button className=\"completed-button\" onClick= {this.markAsCompleted} >\n                        Mark As Completed</button>\n                    <button className=\"remove-button\" onClick={this.handleDelete}>\n                        Remove</button>\n                </div>\n            </div>\n        )\n    }\n};\nconst mdp = dispatch => ({\n    deleteTodo: (data) => dispatch({type: \"REMOVE_TODO\", payload:(data)}),\n    completedTask: (data) => dispatch({type: \"COMPLETE_TODO\", payload:(data)}),\n});\n\nexport default connect(null, mdp)(TodoListItem);\n","import React,{Component} from 'react';\nimport { connect } from 'react-redux';\nimport { fetchToDoLists } from '../mainStore'\nimport NewTodoForm from './NewTodoForm';\nimport TodoListItem from './TodoListItem';\nimport './TodoList.css';\n\nclass TodoList extends Component{\n    \n    componentDidMount(){\n        this.props.fetchTodos()\n      } \n    render(){\n        console.log(\"**************** todolist ********\",this.props.activeToDOList)\n        return(\n            <div className=\"list-wrapper\">\n                <NewTodoForm />\n                {this.props.activeToDOList.filter(todoList => todoList.status === false)\n                .map(todo => <TodoListItem {...todo} />)}\n            </div>\n        )\n    }\n};\n\nconst msp = state => ({\n    activeToDOList: state.activeToDOList,\n});\n\nconst mdp = dispatch => {\n    return {\n        fetchTodos: () => dispatch(fetchToDoLists()),\n    }\n}\n  \nexport default connect(msp, mdp)(TodoList);","import React, {Component} from 'react';\nimport './TodoListItem.css';\n\nclass CompleteTodoListItem extends Component {\n    \n    render(){\n        return(\n            <div className=\"complete-todo-item-container\">\n                <h3> THIS TASK HAS BEEN COMPLETED</h3>\n                <h3>TITLE: {this.props.title}</h3>\n                <h3>COMPLETE DATE: {this.props.dateToDo}</h3>\n                \n            </div>\n        )\n    }\n};\n\n\nexport default CompleteTodoListItem;\n\n","import React,{Component} from 'react';\nimport { connect } from 'react-redux';\nimport { fetchToDoLists } from '../mainStore'\nimport  CompleteTodoListItem from './CompleteTodoListItem';\nimport './TodoList.css';\n\nclass TodoListComplete extends Component{\n    \n    componentDidMount(){\n        this.props.fetchTodos()\n      } \n    render(){\n        return(\n            <div className=\"list-wrapper\">\n                \n                {this.props.activeToDOList.filter(todoList => todoList.status === true)\n                .map(todo => <CompleteTodoListItem {...todo} />)}\n            </div>\n        )\n    }\n};\n\nconst msp = state => ({\n    activeToDOList: state.activeToDOList,\n});\n\nconst mdp = dispatch => {\n    return {\n        fetchTodos: () => dispatch(fetchToDoLists()),\n    }\n}\n  \nexport default connect(msp, mdp)(TodoListComplete);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\n// import TodoListComplete from './todos/TodoListComplete'; \n// import {connect} from 'react-redux'\n\nfunction NavBar(props){\n    // console.log('nav bar prop shoppingCartItems length', props.shoppingCartItems.length)\n    // console.log('nav bar prop current user', props.currentUser)\n  return (\n   <div className=\"  fixed-top navbar\" >\n   \n          {/* <div className=\"navDiv\">  */}\n          \n            <Link to=\"/\">\n                <div className=\"navCLass \" >Home</div>\n            </Link>\n          \n            <Link to=\"/complete\">\n                <div className=\"navCLass \" >Complete Tasks</div>\n            </Link>\n      </div>\n      \n  )\n}\nexport default NavBar\n","import React, {Component} from 'react';\nimport { Route, Switch } from 'react-router-dom'; \nimport TodoList from './todos/TodoList';\nimport TodoListComplete from './todos/TodoListComplete'\nimport NewTodoForm from './todos/NewTodoForm'\nimport { connect } from 'react-redux';\nimport { fetchToDoLists } from './mainStore'\nimport NavBar from './NavBar'\n\nimport './App.css';\n\nclass App extends Component {\n    componentDidMount(){\n        this.props.fetchAllTodo()  \n    }\n    render(){\n        // console.log('****************app activeToDOList********',this.props.todolist)\n\n        return(\n            <div className=\"App\">\n                <NavBar fixed=\"top\"  logout={this.logout} />\n                <Switch>\n                    <Route path='/todolist' component={TodoList} /> \n                    <Route path='/complete' component={TodoListComplete} />\n                    <Route path='/' component={TodoList} /> \n                </Switch>\n            </div>\n\n        )\n    }\n};\n\nfunction msp(state){\n    return {\n      connectTodolist: state.activeToDOList,\n      \n    }\n  }\n\nconst mdp = dispatch => {\n    return {\n        fetchAllTodo: () => dispatch(fetchToDoLists()), \n    }\n  }\n\nexport default connect(msp, mdp)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createStore, applyMiddleware } from 'redux' ;\nimport { Provider } from 'react-redux';\nimport mainStore from './mainStore';\nimport thunk from 'redux-thunk';\n\nlet store = createStore (mainStore, applyMiddleware(thunk))\n\nReactDOM.render(\n    <Provider store={store} >\n        <Router>\n            <Route path='/' component={App} />\n        </Router>\n    </Provider>,\n    document.getElementById('root'),\n);"],"sourceRoot":""}